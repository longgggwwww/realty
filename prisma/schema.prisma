// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  profile  Profile?
  disabled Boolean  @default(false)

  // Tài khoản liên kết
  accounts Account[]

  // Vai trò người dùng
  role   Role?   @relation(fields: [roleId], references: [id])
  roleId String? @db.ObjectId

  // Các quyền đặc biệt
  extendPermissions   Permission[] @relation(fields: [extendPermissionIds], references: [id])
  extendPermissionIds String[]     @db.ObjectId

  // Bài viết đã tạo
  posts Post[] @relation("UserCreatePost")

  // Bài viết đã lưu
  savedPosts Post[] @relation("UserSavePost")

  // Loại tài khoản đã liên kết: phone, facebook, google
  providers String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

type Profile {
  name          String?
  dob           DateTime?
  gender        Boolean?
  phone         String?
  email         String?
  emailVerified Boolean?
  about         String?
  address       Address?
  avatar        String?
  background    String?
}

type Address {
  provide  String
  district String
  ward     String
}

model Account {
  uid    String @id @map("_id")
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  @@map("accounts")
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title String
  price String

  author   User   @relation(name: "UserCreatePost", fields: [authorId], references: [id])
  authorId String @db.ObjectId

  // Bài viết này được lưu bởi ai
  savedBy   User?   @relation(name: "UserSavePost", fields: [savedById], references: [id])
  savedById String? @db.ObjectId

  // Loại hình bất động sản
  estateType   EstateType @relation(fields: [estateTypeId], references: [id])
  estateTypeId String     @db.ObjectId

  thumbnail String
  images    String[]

  saleType String
  status   String
  views    Int    @default(0)
  address  Json

  utils   EstateUtility[] @relation(fields: [utilIds], references: [id])
  utilIds String[]        @db.ObjectId

  properties   EstateProperty[] @relation(fields: [propertieIds], references: [id])
  propertieIds String[]         @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("posts")
}

model Role {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  level Int

  permissions   Permission[] @relation(fields: [permissionIds], references: [id])
  permissionIds String[]     @db.ObjectId

  // Hiện tại, user nào đang có role này?
  user User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  AppConfig AppConfig[]

  @@map("roles")
}

model Permission {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  code        String  @unique
  description String?

  // Thuộc group nào
  group   PermissionGroup @relation(fields: [groupId], references: [id])
  groupId String          @db.ObjectId

  // Hiện tại, role nào đang chứa permission này
  roles   Role[]   @relation(fields: [roleIds], references: [id])
  roleIds String[] @db.ObjectId

  // Hiện tại, user nào dùng permission này làm permission đặc biệt
  users   User[]   @relation(fields: [userIds], references: [id])
  userIds String[] @db.ObjectId

  @@map("permissions")
}

// Phân loại quyền hạn
model PermissionGroup {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  permissions Permission[]

  @@map("permission-groups")
}

// Loại hình của bất động sản
model EstateType {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  label String
  icon  String

  // 1 loại hình chứa nhiều thuộc tính (1 - N)
  properties  EstateProperty[] @relation(fields: [propertyIds], references: [id])
  propertyIds String[]         @db.ObjectId

  // Bài viết thuộc loại hình bất động sản này
  posts Post[]

  @@map("estate-types")
}

// Thuộc tính của bds
model EstateProperty {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  key   String @unique
  title String
  icon  String

  // Thuộc loại bds nào
  owners   EstateType[] @relation(fields: [ownerIds], references: [id])
  ownerIds String[]     @db.ObjectId

  options      String[]
  isFilterItem Boolean
  dataType     String
  unit         String?

  posts   Post[]   @relation(fields: [postIds], references: [id])
  postIds String[] @db.ObjectId

  @@map("estate-properties")
}

// Tiện ích của bds
model EstateUtility {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  label String
  icon  String

  posts   Post[]   @relation(fields: [postIds], references: [id])
  postIds String[] @db.ObjectId

  @@map("estate-utilities")
}

enum EstatePropertyType {
  MONEY
  TEXT
  NUMBER
  SELECT
  RADIO
  CHECKBOX
  AREA
  SIZE
  BOOL
}

model Setting {
  id String @id @map("_id") @db.ObjectId
}

model AppConfig {
  id String @id @map("_id") @db.ObjectId

  // Role mặc định sẽ được set cho user mới
  defaultRole Role   @relation(fields: [roleId], references: [id])
  roleId      String @db.ObjectId

  @@map("app-config")
}
